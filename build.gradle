plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.0'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'war' // 추가: War 플러그인 추가
	//docker
	id 'com.bmuschko.docker-java-application' version '9.3.0'
}

group = 'com.daney'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot Starter Data JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	// Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	// web
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//tests
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'com.h2database:h2'

	// MySQL 드라이버
	implementation 'mysql:mysql-connector-java:8.0.33'
	// JUnit4 추가
	testImplementation("org.junit.vintage:junit-vintage-engine") {
		exclude group: "org.hamcrest", module: "hamcrest-core"
	}
	// ModelMapper 추가
	implementation 'org.modelmapper:modelmapper:3.2.0'
	// JSP 추가
	implementation 'org.apache.tomcat.embed:tomcat-embed-jasper:10.1.20'
	implementation 'jakarta.servlet:jakarta.servlet-api' //스프링부트 3.0 이상
	implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api' //스프링부트 3.0 이상
	implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl' //스프링부트 3.0 이상


	//mail 추가
	implementation 'org.springframework.boot:spring-boot-starter-mail:3.3.0'
	//DevTools 추가
	implementation 'org.springframework.boot:spring-boot-devtools:3.3.0'
	// JWT 라이브러리
	implementation group: 'com.auth0', name: 'java-jwt', version: '4.4.0'
	// spring security
	implementation("org.springframework.security:spring-security-core:6.3.0")
	implementation("org.springframework.security:spring-security-web:6.3.0")
	implementation("org.springframework.security:spring-security-config:6.3.0")
	// Spring Security Taglibs 추가
	implementation 'org.springframework.security:spring-security-taglibs:6.3.0'
	//JSON, XML 관련 라이브러리 추가
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.1'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.17.1'
	// xml 바인딩 추가
	implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.2'
	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis:3.3.0'
	// cache
	implementation 'org.springframework.boot:spring-boot-starter-cache:3.3.0'
	// actuator - 성능 측정을 위해 추가
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
}

test {
	useJUnitPlatform()
}

// 테스트를 위해 추가
bootRun {
	jvmArgs = ['-Djava.awt.headless=true', '-Dspring.profiles.active=dev']
}

// JSP 파일을 JAR 파일에 포함시키기 위한 설정
bootJar {
	enabled = false
}

bootWar {
	enabled = true
}

processResources {
	from("src/main/webapp") {
		into("static")
	}
}

//docker
docker {
	javaApplication {
		baseImage = 'eclipse-temurin:21-jre'
		maintainer = 'yhdaneys <yhdaneys@gmail.com>'
		ports = [8001]
		images = ["${project.group}/${project.name}:${project.version}"]
		jvmArgs = ['-Xms512m', '-Xmx1024m']
	}
}
